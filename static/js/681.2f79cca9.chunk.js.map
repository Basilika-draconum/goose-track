{"version":3,"file":"static/js/681.2f79cca9.chunk.js","mappings":"uHA4CA,IAAe,IAA0B,wD,qEC3CzC,EAAuB,2B,SCEVA,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OAC1B,SAAC,KAAD,CAAMC,UAAWC,EAAYC,GAAIJ,EAAjC,SAAyCC,GADf,C,mGCF5B,EAA0B,2BAA1B,EAA0E,sCAA1E,EAAuH,wBAAvH,EAA4J,8BAA5J,EAAwM,+BAAxM,EAAyP,mCAAzP,EAA0S,+BAA1S,EAAuV,+BAAvV,EAAoY,+BAApY,EAAmb,iCAAnb,EAA0d,uBAA1d,EAAuf,uB,8JCSjfI,EAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KAAaE,QAAQC,WAC5BC,SAAUJ,EAAAA,KAAaK,IAAI,GAAGF,aAE1BG,EAAgB,CACpBJ,MAAO,GACPE,SAAU,IAECG,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAYjB,OACE,SAAC,KAAD,CACEH,cAAeA,EACfI,iBAAkBX,EAClBY,SAdiB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BL,GACEM,EAAAA,EAAAA,IAAW,CACTZ,MAAOU,EAAOV,MACdE,SAAUQ,EAAOR,YAGrBS,GACD,EAGC,UAKE,gBAAKjB,UAAWC,EAAhB,UACE,iBAAKD,UAAWC,EAAhB,WACE,UAAC,KAAD,CAAMD,UAAWC,EAAjB,WACE,eAAID,UAAWC,EAAf,qBACA,mBAAOD,UAAWC,EAAlB,WACE,cAAGD,UAAWC,EAAd,oBACF,SAAC,KAAD,CACED,UAAWC,EACXkB,KAAK,QACLC,KAAK,QACLC,YAAY,oBAGd,SAAC,KAAD,CACEC,UAAU,OACVtB,UAAWC,EACXmB,KAAK,WAEP,kBAAOpB,UAAWC,EAAlB,UACE,cAAGD,UAAWC,EAAd,yBAEF,SAAC,KAAD,CACED,UAAWC,EACXkB,KAAK,WACLC,KAAK,WACLC,YAAY,oBAEd,SAAC,KAAD,CACEC,UAAU,OACVtB,UAAWC,EACXmB,KAAK,cAGP,oBAAQpB,UAAWC,EAAmBkB,KAAK,SAA3C,WACE,iBAAMnB,UAAWC,EAAjB,qBACA,gBAAKD,UAAWC,EAAhB,UACE,gBAAKsB,KAAI,UAAKC,EAAAA,EAAL,2BAIf,SAAC3B,EAAA,EAAD,CAAcC,MAAO,YAAaC,KAAK,aACvC,gBACEC,UAAWC,EACXwB,OAAM,UAAKC,EAAL,gBAAuBC,EAAvB,OACNC,IAAG,UAAKF,GACRG,IAAI,gBAMf,EC/ED,EAPkB,WAChB,OACE,+BACE,SAAClB,EAAD,KAGL,C","sources":["images/auth.svg","webpack://goose-track/./src/components/AuthNavigate/authNavigate.module.scss?386e","components/AuthNavigate/AuthNavigate.jsx","webpack://goose-track/./src/components/LoginForm/loginForm.module.scss?0f87","components/LoginForm/LoginForm.jsx","pages/AuthPage/LoginPage.jsx"],"sourcesContent":["var _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgAuth(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-log-out\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 3.5556,\n    d: \"M22.259 23.824l7.824-7.824M30.083 16l-7.824-7.824M30.083 16h-18.778M11.306 1.917h-1.878c-2.629 0-3.944 0-4.948 0.512-0.883 0.45-1.601 1.168-2.051 2.051-0.512 1.004-0.512 2.319-0.512 4.948v13.144c0 2.629 0 3.944 0.512 4.948 0.45 0.883 1.168 1.601 2.051 2.051 1.004 0.512 2.319 0.512 4.948 0.512h1.878\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgAuth);\nexport default __webpack_public_path__ + \"static/media/auth.408eba765c870555b21ba75c80c5377e.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"authNavigate_link__tp20Y\"};","import { Link } from 'react-router-dom';\nimport style from './authNavigate.module.scss'\n\nexport const AuthNavigate = ({ route, text }) => (\n  <Link className={style.link} to={route}>{text}</Link>\n);","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"loginForm_wrapper__CsLf4\",\"loginFormContainer\":\"loginForm_loginFormContainer__CYH5z\",\"form\":\"loginForm_form__GQH2o\",\"form_title\":\"loginForm_form_title__HFeTK\",\"login_label\":\"loginForm_login_label__K1hZy\",\"login_paragraph\":\"loginForm_login_paragraph__VUbcL\",\"login_input\":\"loginForm_login_input__qengX\",\"form_button\":\"loginForm_form_button__E0pGk\",\"button_text\":\"loginForm_button_text__0CZ5u\",\"error_message\":\"loginForm_error_message__WAlR8\",\"svg\":\"loginForm_svg__RH-3A\",\"img\":\"loginForm_img__1xrhl\"};","import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport style from './loginForm.module.scss';\nimport icons from 'images/auth.svg';\nimport GooseLogIn from 'images/goose-login.png';\nimport GooseLogIn2x from 'images/goose-login@2x.png';\n\nimport { loginThunk } from '../../redux/auth/authOperations';\nimport { AuthNavigate } from 'components/AuthNavigate/AuthNavigate';\nconst schema = yup.object().shape({\n  email: yup.string().email().required(),\n  password: yup.string().min(6).required(),\n});\nconst initialValues = {\n  email: '',\n  password: '',\n};\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(\n      loginThunk({\n        email: values.email,\n        password: values.password,\n      })\n    );\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <div className={style.wrapper}>\n        <div className={style.loginFormContainer}>\n          <Form className={style.form}>\n            <h1 className={style.form_title}>Log In</h1>\n            <label className={style.login_label}>\n              <p className={style.login_paragraph}>Email</p>\n            <Field\n              className={style.login_input}\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Enter email\"\n            />\n            </label>\n            <ErrorMessage\n              component=\"span\"\n              className={style.error_message}\n              name=\"email\"\n            />\n            <label className={style.login_label}>\n              <p className={style.login_paragraph}>Password</p>\n            </label>\n            <Field\n              className={style.login_input}\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Enter password\"\n            />\n            <ErrorMessage\n              component=\"span\"\n              className={style.error_message}\n              name=\"password\"\n            />\n\n            <button className={style.form_button} type=\"submit\">\n              <span className={style.button_text}>Log In</span>\n              <svg className={style.svg}>\n                <use href={`${icons}#icon-log-in`} />\n              </svg>\n            </button>\n          </Form>\n          <AuthNavigate route={\"/register\"} text=\"Sign Up\" />\n          <img\n            className={style.img}\n            srcSet={`${GooseLogIn} 1x, ${GooseLogIn2x} 2x`}\n            src={`${GooseLogIn}`}\n            alt=\"goose\"\n          />\n        </div>\n      </div>\n    </Formik>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\n\nconst LoginPage = () => {\n  return (\n    <>\n      <LoginForm />\n    </>\n  );\n};\nexport default LoginPage;\n"],"names":["AuthNavigate","route","text","className","style","to","schema","yup","shape","email","required","password","min","initialValues","LoginForm","dispatch","useDispatch","validationSchema","onSubmit","values","resetForm","loginThunk","type","name","placeholder","component","href","icons","srcSet","GooseLogIn","GooseLogIn2x","src","alt"],"sourceRoot":""}